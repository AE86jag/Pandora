<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pandora.domain.convertiblebond.mapper.ConvertibleBondMapper">
    <resultMap id="BaseResultMap" type="com.pandora.domain.convertiblebond.model.ConvertibleBond">
        <id column="bond_code" property="bondCode"/>
        <result column="bond_short_name" property="bondShortName"/>
        <result column="subscription_date" jdbcType="DATE" property="subscriptionDate"/>
        <result column="subscription_code" property="subscriptionCode"/>
        <result column="stock_code" property="stockCode"/>
        <result column="stock_short_name" property="stockShortName"/>
        <result column="transfer_stock_price" property="transferStockPrice"/>
        <result column="current_bond_price" property="currentBondPrice"/>
        <result column="issue_scale" property="issueScale"/>
        <result column="shot_result_publish_date" jdbcType="DATE"  property="shotResultPublishDate"/>
        <result column="shot_rate" property="shotRate"/>
        <result column="listed_date"  jdbcType="DATE"  property="listedDate"/>
        <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="BaseColumnList">
        bond_code, bond_short_name, subscription_date, subscription_code, stock_code, stock_short_name,
        transfer_stock_price, current_bond_price, issue_scale, shot_result_publish_date, shot_rate, listed_date,
        last_modify_time, create_time
    </sql>

    <insert id="batchInsertOrUpdate" parameterType="ConvertibleBond">
        INSERT INTO convertible_bond(bond_code, bond_short_name, subscription_date, subscription_code, stock_code,
        stock_short_name, transfer_stock_price, current_bond_price, issue_scale, shot_result_publish_date, shot_rate,
        listed_date) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.bondCode},#{item.bondShortName},#{item.subscriptionDate},#{item.subscriptionCode},#{item.stockCode},
            #{item.stockShortName},#{item.transferStockPrice},#{item.currentBondPrice},#{item.issueScale},
            #{item.shotResultPublishDate},#{item.shotRate},#{item.listedDate})
        </foreach>
        ON DUPLICATE KEY UPDATE bond_short_name = values(bond_short_name),
        subscription_date = values(subscription_date), subscription_code = values(subscription_code),
        stock_code = values(stock_code), stock_short_name = values(stock_short_name),
        transfer_stock_price = values(transfer_stock_price), current_bond_price = values(current_bond_price),
        issue_scale = values(issue_scale), shot_result_publish_date = values(shot_result_publish_date),
        shot_rate = values(shot_rate), listed_date = values(listed_date)
    </insert>

    <select id="findByCodeOrShortNameLike" parameterType="String" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumnList"/>
        FROM convertible_bond
        WHERE bond_code LIKE CONTACT('%', #{key}, '%')
        OR bond_short_name LIKE CONTACT('%', #{key}, '%')
    </select>

    <select id="findByCode" parameterType="String" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumnList"/>
        FROM convertible_bond
        WHERE bond_code = #{bondCode}
    </select>


    <select id="findBySubscriptionCode" parameterType="String" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumnList"/>
        FROM convertible_bond
        WHERE subscription_code = #{bondCode}
    </select>
</mapper>